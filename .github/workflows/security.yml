name: Security and Dependency Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  security-scan:
    runs-on: windows-latest
    name: Security Scanning
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Run security audit
      run: |
        dotnet list package --vulnerable --include-transitive
        
    - name: Check for outdated packages
      run: |
        dotnet list package --outdated
      continue-on-error: true
      
  dependency-review:
    runs-on: windows-latest
    name: Dependency Review
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: high
        
  codeql-analysis:
    runs-on: windows-latest
    name: CodeQL Analysis
    
    permissions:
      actions: read
      contents: read
      security-events: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'csharp'
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Build application
      run: |
        dotnet restore
        dotnet build --configuration Release
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3